{
  "branches": [
    "main",
    {
      "name": "develop",
      "prerelease": "alpha"
    },
    {
      "name": "beta",
      "prerelease": true
    }
  ],
  "plugins": [
    [
      "@semantic-release/commit-analyzer",
      {
        "preset": "conventionalcommits",
        "releaseRules": [
          {"type": "feat", "release": "minor"},
          {"type": "fix", "release": "patch"},
          {"type": "perf", "release": "patch"},
          {"type": "revert", "release": "patch"},
          {"type": "docs", "release": "patch"},
          {"type": "style", "release": false},
          {"type": "refactor", "release": "patch"},
          {"type": "test", "release": false},
          {"type": "build", "release": false},
          {"type": "ci", "release": false},
          {"type": "chore", "release": false},
          {"breaking": true, "release": "major"}
        ],
        "parserOpts": {
          "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"]
        }
      }
    ],
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "presetConfig": {
          "types": [
            {"type": "feat", "section": "✨ Features", "hidden": false},
            {"type": "fix", "section": "🐛 Bug Fixes", "hidden": false},
            {"type": "perf", "section": "⚡ Performance Improvements", "hidden": false},
            {"type": "revert", "section": "⏪ Reverts", "hidden": false},
            {"type": "docs", "section": "📚 Documentation", "hidden": false},
            {"type": "style", "section": "💄 Styles", "hidden": true},
            {"type": "refactor", "section": "♻️ Code Refactoring", "hidden": false},
            {"type": "test", "section": "✅ Tests", "hidden": true},
            {"type": "build", "section": "🏗️ Build System", "hidden": true},
            {"type": "ci", "section": "👷 Continuous Integration", "hidden": true},
            {"type": "chore", "section": "🔧 Chores", "hidden": true}
          ]
        }
      }
    ],
    [
      "@semantic-release/changelog",
      {
        "changelogFile": "CHANGELOG.md",
        "changelogTitle": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n<!-- semantic-release:changelog -->"
      }
    ],
    [
      "@semantic-release/exec",
      {
        "verifyReleaseCmd": "echo ${nextRelease.version} > .VERSION",
        "prepareCmd": "python -c \"import toml; data = toml.load('pyproject.toml'); data['project']['version'] = '${nextRelease.version}'; open('pyproject.toml', 'w').write(toml.dumps(data))\"",
        "publishCmd": "python -m build && echo 'Build completed for version ${nextRelease.version}'"
      }
    ],
    [
      "@semantic-release/git",
      {
        "assets": [
          "pyproject.toml",
          "CHANGELOG.md",
          ".VERSION"
        ],
        "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
      }
    ],
    [
      "@semantic-release/github",
      {
        "assets": [
          {
            "path": "dist/*.whl",
            "label": "Python Wheel Package"
          },
          {
            "path": "dist/*.tar.gz", 
            "label": "Source Distribution"
          }
        ],
        "successComment": "🎉 This ${issue.pull_request ? 'pull request' : 'issue'} is included in version [${nextRelease.version}](${releases.filter(release => release.version === nextRelease.version)[0].url}) which has just been released.",
        "failComment": "❌ The release from branch `${branch.name}` had failed due to the following errors:\n- ${errors.map(err => err.message).join('\\n- ')}",
        "failTitle": "🚨 The automated release is failing",
        "labels": ["released"],
        "releasedLabels": ["released-${nextRelease.version}"]
      }
    ]
  ],
  "tagFormat": "v${version}",
  "repositoryUrl": "https://github.com/crewai/email-triage.git",
  "debug": false,
  "dryRun": false,
  "ci": true
}