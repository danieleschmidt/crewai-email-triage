[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "crewai_email_triage"
version = "0.1.0"
description = "Smart email assistant that classifies, prioritizes, summarizes, and drafts replies."
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "CrewAI Email Triage Team", email = "maintainers@crewai-email-triage.com"},
]
license = {text = "MIT"}
keywords = ["email", "triage", "automation", "ai", "classification"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Email",
    "Topic :: Office/Business",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "cryptography>=43.0.0,<46.0.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0",
    "prometheus-client>=0.19.0",
]

[project.optional-dependencies]
test = [
    "pytest~=8.4.0",
    "pytest-cov~=6.2.0",
    "pytest-xdist~=3.8.0",
    "pytest-mock~=3.14.1",
    "pytest-asyncio~=0.23.0",
    "pytest-benchmark~=4.0.0",
    "coverage[toml]~=7.6.0",
]
dev = [
    "ruff~=0.12.0",
    "black~=24.0.0",
    "isort~=5.13.0",
    "mypy~=1.11.0",
    "bandit~=1.8.0",
    "pre-commit~=4.2.0",
    "safety~=3.6.0",
]
docs = [
    "mkdocs~=1.6.0",
    "mkdocs-material~=9.6.16",
    "mkdocstrings[python]~=0.26.0",
    "mermaid2~=1.0.0",
]
performance = [
    "memory-profiler~=0.61.0",
    "py-spy~=0.3.0",
    "line-profiler~=4.1.0",
]

[project.urls]
Homepage = "https://github.com/crewai/email-triage"
Documentation = "https://crewai-email-triage.readthedocs.io"
Repository = "https://github.com/crewai/email-triage.git"
"Bug Tracker" = "https://github.com/crewai/email-triage/issues"
Changelog = "https://github.com/crewai/email-triage/blob/main/CHANGELOG.md"

[project.scripts]
crewai-triage = "crewai_email_triage.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/crewai_email_triage",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--tb=short",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow running tests",
    "network: Tests requiring network access",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/crewai_email_triage"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# =============================================================================
# CODE QUALITY CONFIGURATION
# =============================================================================

[tool.ruff]
target-version = "py38"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
]
ignore = [
    "S101",  # Use of assert detected
    "S108",  # Probable insecure usage of temporary file/directory
    "E501",  # Line too long (handled by black)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = [
    "S101",  # Use of assert detected
    "ARG",   # Unused function args
    "S105",  # Possible hardcoded password
    "S106",  # Possible hardcoded password
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["crewai_email_triage"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

# =============================================================================
# DOCUMENTATION CONFIGURATION
# =============================================================================

[tool.mkdocs]
site_name = "CrewAI Email Triage"
site_description = "Smart email assistant that classifies, prioritizes, summarizes, and drafts replies"
site_url = "https://crewai-email-triage.readthedocs.io"
repo_url = "https://github.com/crewai/email-triage"
repo_name = "crewai/email-triage"

# =============================================================================
# SEMANTIC RELEASE CONFIGURATION
# =============================================================================

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m build"
dist_path = "dist/"
upload_to_pypi = false
upload_to_release = true
remove_dist = false
patch_without_tag = true

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.branches.develop]
match = "develop"
prerelease = true
prerelease_token = "alpha"
